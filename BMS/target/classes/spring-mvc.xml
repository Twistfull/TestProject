<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
	    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- 启用spring mvc注解兵自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.bms.reader.controller"/>
	<!-- <context:component-scan base-package="org.zlex.json.controller" />   -->
    <mvc:default-servlet-handler />
    
    
    
    <!-- JSON支持，避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- MappingJackson2HttpMessageConverter：利用jackson的ObjectMapper读写Json数据，
	T为Object，默认可读取application/json，响应媒体类型为application/json -->
    <bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    	<property name="objectMapper" ref="objectMapper" />
    </bean>

    <!-- jackson  null 不输出 -->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
        <property name="serializationInclusion">
            <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
        </property>
    </bean>   
    <!-- ByteArrayHttpMessageConverter：读写二进制数据，T为byte[]类型，可读取*/*，
    	  可通过supportedMediaTypes属性指定媒体类型，响应信息媒体类型为application/octer-stream -->
	<bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
	
<!-- 	
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.ll.model.StringToPersonConverter" />
			</list>
		</property>
	</bean> -->
 

	<!-- 处理在类级别上的@RequestMapping注解 -->
<!-- StringHttpMessageConverter:将请求信息转换为字符串，T为String，可读取所有媒体类型(*/*) -->
	<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter" >
        <constructor-arg value= "UTF-8"/>
        <property name= "supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value >
                <value>text/plain;charset=UTF-8</value >
            </list>
        </property>
    </bean >
    
      <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
			<ref bean="byteArrayHttpMessageConverter"/>
        	<ref bean= "stringHttpMessageConverter" />
            <ref bean= "jsonHttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven >
	<!--拦截器列表 -->
	<mvc:interceptors>
	    <!--后台管理拦截器列表 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/**/static/**" />
			<mvc:exclude-mapping path="/login/doLogin" />
			<mvc:exclude-mapping path="/login/register" />
			<mvc:exclude-mapping path="/login/addRegister" />
			<mvc:exclude-mapping path="/login/remoteUsername" />
			<mvc:exclude-mapping path="/" />
			<bean class="com.bms.reader.interceptor.SessionInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>	
		
	<!--视图映射设定 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
 <!-- 
	定义html文件的位置
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".html" />
	</bean> -->

	<!-- 定义无需Controller的url<->view直接映射 -->
	<mvc:view-controller path="/" view-name="login/login" />
	

	<aop:aspectj-autoproxy />
     	<!-- 文件上传支持 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>utf-8</value>
		</property>
		<property name="maxUploadSize">
			<value>31457280</value>
			<!-- 上传文件大小限制为30M，30*1024*1024 -->
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	
</beans>
