<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- 这里namespace必须是UserMapper接口的路径，不然要运行的时候要报错 "is not known to the MapperRegistry" -->
<mapper namespace="com.bms.reader.persist.BookInfoMapper" >
<!-- 要对应到所有属性 才能使用-->
  <resultMap id="BaseResultMap" type="com.bms.reader.model.BookInfo" >
    <constructor >
      <idArg column="BOOK_ID" jdbcType="VARCHAR" javaType="java.lang.String" /><!--jdbcType 对可能为空的值进行处理 -->
      <arg column="BOOK_KIND" jdbcType="VARCHAR" javaType="java.lang.String" /><!-- 使用idAeg 而不用id result是由于有构造方法元素 -->
      <arg column="BOOK_NAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="BOOK_AUTHOR" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="BOOK_PUBL" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="PUBL_DATE" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="BOOK_PRICE" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="BOOK_ADDRESS" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="STORAGE_DATE" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="BOOK_INTRO" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="BOOK_STATUS" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  
  <resultMap id="bookInfoResultMap" type="com.bms.reader.model.BookInfo" >
      <id property="bookId" column="BOOK_ID" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="bookKind" column="BOOK_KIND" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="bookName" column="BOOK_NAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="bookAuthor" column="BOOK_AUTHOR" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="bookPubl" column="BOOK_PUBL" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="publDate" column="PUBL_DATE" jdbcType="DATE" javaType="java.util.Date" />
      <result property="bookPrice" column="BOOK_PRICE" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <result property="bookAddress" column="BOOK_ADDRESS" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="storageDate" column="STORAGE_DATE" jdbcType="DATE" javaType="java.util.Date" />
      <result property="bookIntro" column="BOOK_INTRO" jdbcType="VARCHAR" javaType="java.lang.String" />
      <result property="bookStatus" column="BOOK_STATUS" jdbcType="VARCHAR" javaType="java.lang.String" />
  </resultMap>
  <sql id="Base_Column_List" >
   BOOK_ID,BOOK_KIND,BOOK_NAME,BOOK_AUTHOR,BOOK_PUBL,PUBL_DATE,BOOK_PRICE,BOOK_ADDRESS,STORAGE_DATE,BOOK_INTRO,BOOK_STATUS
  </sql>

  <select id="selectBookName" resultType="java.lang.String" parameterType="java.lang.String" >
    select BOOK_NAME
    from BOOK_INFO
    where BOOK_ID = #{bookId,jdbcType=VARCHAR}
  </select>

  <insert id="insert"  parameterType="com.bms.reader.model.BookInfo" >
    <selectKey keyProperty="bookId" resultType="String" order="BEFORE">  
        select  replace(sys_guid(),'-','')   from dual <!--通过sys_guid生成 标识符，并用" "替换"-"--> 
    </selectKey> 
    insert into BOOK_INFO(BOOK_ID,BOOK_KIND,BOOK_NAME,BOOK_AUTHOR,BOOK_PUBL,PUBL_DATE,BOOK_PRICE,BOOK_ADDRESS,STORAGE_DATE,BOOK_INTRO,BOOK_STATUS)
    values (#{bookId,jdbcType=VARCHAR}, #{bookKind,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR},
    #{bookAuthor,jdbcType=VARCHAR},#{bookPubl,jdbcType=VARCHAR},#{publDate,jdbcType=DATE},
    #{bookPrice,jdbcType=DECIMAL},#{bookAddress,jdbcType=VARCHAR},#{storageDate,jdbcType=DATE},#{bookIntro,jdbcType=VARCHAR},'在架')
  </insert>
  
   <sql id="filter_sql" >
    <if test="bookId != null" >
      and BOOK_ID = #{bookId}
    </if>
    <if test="bookKind != null" >
      and BOOK_KIND = #{bookKind}
    </if>
    <if test="bookName != null" >
      and BOOK_NAME like '%${bookName}%'
    </if>
    <if test="bookAuthor != null" >
      and BOOK_AUTHOR = #{bookAuthor}  <!-- &gt;是>的意思， &lt;是<的意思 -->
    </if>
    <if test="bookIntro != null" >
      and BOOK_INTRO like '%${bookIntro}%'
    </if>
  </sql>
   <select id="listAll" resultMap="BaseResultMap" parameterType="com.bms.reader.model.BookInfo" >
    select
    <include refid="Base_Column_List" />
    from BOOK_INFO
    where 1 = 1
    <include refid="filter_sql" />
    order by BOOK_PRICE asc
    </select>
   <select id="selectByBookName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from BOOK_INFO
    where BOOK_NAME != #{_paramete}
  </select>
  
   <select id="selectByBookId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from BOOK_INFO
    where BOOK_ID = #{bookId,jdbcType=VARCHAR}
  </select>
  
  <update id="updateBookStatus" parameterType="java.lang.String" >
    update BOOK_INFO
    <set >
        BOOK_STATUS= #{status}
   </set>
    where BOOK_ID = #{bookId,jdbcType=VARCHAR}
  </update>
 
  <!-- 查看所有图书的信息 -->
   <select id="listAlladm" resultMap="BaseResultMap" parameterType="com.bms.reader.model.BookInfoQueryVo" >
     select <include refid="Base_Column_List"/> from BOOK_INFO
     <if test="sort!=null and sort!=''">order by ${tableSort} ${order}</if>
     <!-- 
    select 
    <include refid="Base_Column_List"/> from
    (select e.*,rownum r from
    (select * from BOOK_INFO 
    <if test="sort!=null and sort!=''">order by ${sort} ${order}</if>)e)e1 
    where e1.r>= #{start,jdbcType=INTEGER} and e1.r<= #{end,jdbcType=INTEGER}
	-->
	</select>
	  <!-- 查看记录数 -->
    <select id="findCount" resultType="int">
    	select count(*) from BOOK_INFO
    </select>
	<!-- 通过bookId删除图书 -->
	<delete id="deleteByBookId" parameterType="java.lang.String">
		delete from BOOK_INFO where BOOK_ID=#{value}
	</delete>
</mapper>